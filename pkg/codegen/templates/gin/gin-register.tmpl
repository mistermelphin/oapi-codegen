// GinServerOptions provides options for the Gin server.
type GinServerOptions struct {
    BaseURL string
    Middlewares []gin.HandlerFunc
}

// keeping for backward compatibility
type MiddlewareFunc = gin.HandlerFunc

// RegisterHandlers creates http.Handler with routing matching OpenAPI spec.
func RegisterHandlers(router gin.IRouter, si ServerInterface) gin.IRouter {
  return RegisterHandlersWithOptions(router, si, GinServerOptions{})
}

// RegisterHandlersWithOptions creates http.Handler with additional options
func RegisterHandlersWithOptions(router gin.IRouter, si ServerInterface, options GinServerOptions) gin.IRouter {
{{if .}}wrapper := ServerInterfaceWrapper{
Handler: si,
}
{{end}}

router = router.Group(options.BaseURL, options.Middlewares...)

{{range .}}
router.{{.Method }}("{{.Path | swaggerUriToGinUri }}", wrapper.{{.OperationId}})
{{end}}
return router
}
